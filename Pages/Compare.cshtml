@page
@model NBADATA.Pages.CompareModel

<h2>Comparar jugadores</h2>

@* Dos formularios de busqueda, recibiendo nombres  *@
<form method="get" class="row g-2 mb-4">
    <div class="col-auto">
        <input class="form-control" name="player1" placeholder="Jugador 1 (nombre o parte)" value="@Model.Player1" />
    </div>
    <div class="col-auto">
        <input class="form-control" name="player2" placeholder="Jugador 2 (nombre o parte)" value="@Model.Player2" />
    </div>
    <div class="col-auto">
        <button class="btn btn-primary" type="submit">Buscar</button>
    </div>
</form>

@* Mostrar dos tablas (una por cada jugador) que muestren las estadisticas *@
<div class="row">
    <div class="col-md-6">
        <h4>Jugador 1</h4>
        @if (Model.Result1 == null)
        {
            <div class="alert alert-warning">No se encontró Jugador 1</div>
        }
        else
        {
            <table class="table table-striped">
                <tbody>
                    @foreach (var prop in Model.Props)
                    {
                        var val = prop.GetValue(Model.Result1);
                        string text = val switch
                        {
                            null => "-",
                            DateTime dt => dt.ToShortDateString(),
                            decimal d => d.ToString("0.##"),
                            double d2 => d2.ToString("0.##"),
                            float f => f.ToString("0.##"),
                            _ => val.ToString() ?? "-"
                        };
                        <tr>
                            <th>@prop.Name</th>
                            <td>@text</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="col-md-6">
        <h4>Jugador 2</h4>
        @if (Model.Result2 == null)
        {
            <div class="alert alert-warning">No se encontró Jugador 2</div>
        }
        else
        {
            <table class="table table-striped">
                <tbody>
                    @foreach (var prop in Model.Props)
                    {
                        var val = prop.GetValue(Model.Result2);
                        string text = val switch
                        {
                            null => "-",
                            DateTime dt => dt.ToShortDateString(),
                            decimal d => d.ToString("0.##"),
                            double d2 => d2.ToString("0.##"),
                            float f => f.ToString("0.##"),
                            _ => val.ToString() ?? "-"
                        };
                        <tr>
                            <th>@prop.Name</th>
                            <td>@text</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
