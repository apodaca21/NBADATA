@page
@model NBADATA.Pages.CompareModel

<h2>Compare – smoke test</h2>

<form method="get" class="mb-3">
    <label>Mode:</label>
    <select name="mode">
        <option value="basic" selected="@(Model.Mode == "basic" ? "selected" : null)">Basic</option>
        <option value="advanced" selected="@(Model.Mode == "advanced" ? "selected" : null)">Advanced</option>
    </select>

    <label class="ms-3">IDs (coma separados):</label>
    <input name="ids" value="@(string.Join(",", Model.SelectedIds))" style="min-width:220px" />
    <button type="submit">Go</button>
</form>

<p>
    <a href="@(Url.Page("/Compare", new { ids = string.Join(",", Model.SelectedIds), mode = Model.Mode }))">
        Open compare with current params
    </a>
</p>

<p style="color:#888">DEBUG: @Model.DebugMsg</p>

@if (Model.SelectedIds.Length == 0)
{
<div>Ingresa al menos 2 IDs (por ejemplo: <code>1,2</code>).</div>
}
else if (Model.Players.Count < 2)
{
<div>No se encontraron al menos 2 jugadores con esos IDs.</div>
}
else
{
<table class="table table-striped table-bordered" style="max-width:100%; overflow:auto;">
    <thead>
        <tr>
            <th>Propiedad</th>
            @foreach (var p in Model.Players)
                {
                    var name =
                        p.GetType().GetProperty("Name")?.GetValue(p)?.ToString() ??
                        p.GetType().GetProperty("FullName")?.GetValue(p)?.ToString() ??
                        p.GetType().GetProperty("PlayerName")?.GetValue(p)?.ToString() ??
                        $"Id @p.Id";
            <th>@name</th>
                }
        </tr>
    </thead>
    <tbody>
        @foreach (var prop in Model.Props)
            {
        <tr>
            <td><strong>@prop.Name</strong></td>
            @foreach (var player in Model.Players)
                    {
                        var val = prop.GetValue(player);
                        string text = val switch
                        {
                            null => "—",
                            DateTime dt => dt.ToShortDateString(),
                            decimal d => d.ToString("0.##"),
                            double d2 => d2.ToString("0.##"),
                            float f => f.ToString("0.##"),
                            _ => val.ToString() ?? "—"
                        };
            <td>@text</td>
                    }
        </tr>
            }
    </tbody>
</table>
}
